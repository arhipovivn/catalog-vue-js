{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"v-catalog\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VCatalogItem = _resolveComponent(\"VCatalogItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" циклом по массиву в key уникальное знаечение(не может быть 2-х ключей с одинаковыми значениями) \"), _createCommentVNode(\" :product_data=\\\"product\\\" мы связываем product_data дочернего эл та с product родительского  \"), _createCommentVNode(\" на каждой итерации  создает отдельный новый компонент\\n    VCatalogItem и в его данные засовывает каждый новый объект чтолежит  в массиве  products \"), _createCommentVNode(\" @sendArticle=\\\"showArticle\\\"- так происзодит связывание того что передает ребенок родителю  \"), _createCommentVNode(\" т.е при нажатии на кнопку в ребенке в функции showArticle я описал что делать в родителе \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createBlock(_component_VCatalogItem, {\n      key: product.article,\n      product_data: product,\n      onSendArticle: $options.showArticle\n    }, null, 8 /* PROPS */, [\"product_data\", \"onSendArticle\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","_ctx","products","product","_createBlock","_component_VCatalogItem","key","article","product_data","onSendArticle","$options","showArticle"],"sources":["/home/denis/Desktop/catalog/catalog-vue-js/src/components/v-catalog.vue"],"sourcesContent":["<template>\n    <div class=\"v-catalog\">\n    <!-- циклом по массиву в key уникальное знаечение(не может быть 2-х ключей с одинаковыми значениями) -->\n    <!-- :product_data=\"product\" мы связываем product_data дочернего эл та с product родительского  -->\n   <!-- на каждой итерации  создает отдельный новый компонент\n    VCatalogItem и в его данные засовывает каждый новый объект чтолежит  в массиве  products -->\n    <!-- @sendArticle=\"showArticle\"- так происзодит связывание того что передает ребенок родителю  -->\n<!-- т.е при нажатии на кнопку в ребенке в функции showArticle я описал что делать в родителе -->\n    <VCatalogItem\n    v-for=\"product in products\"\n    :key=\"product.article\"\n    :product_data=\"product\" \n    @sendArticle=\"showArticle\"\n    />\n    </div>\n</template>\n<script>\nimport VCatalogItem from './v-catalog-item.vue';\nexport default {\n    methods:{\nshowArticle(elem){\nconsole.log(data)\n}\n    },\n    name: \"v-catalog\",\n    data() {\n        return {\n}\n\n},\ncomponents: { VCatalogItem }\n        }\n\n</script>\n<style lang=\"scss\">\n.v-catalog{\n    \n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        align-items: center;\n\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAaM,OAbNC,UAaM,GAZNC,mBAAA,qGAAwG,EACxGA,mBAAA,kGAAmG,EACpGA,mBAAA,yJAC6F,EAC5FA,mBAAA,iGAAkG,EACtGA,mBAAA,8FAAiG,G,kBAC7FF,mBAAA,CAKEG,SAAA,QAAAC,WAAA,CAJgBC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADdC,YAAA,CAKEC,uBAAA;MAHDC,GAAG,EAAEH,OAAO,CAACI,OAAO;MACpBC,YAAY,EAAEL,OAAO;MACrBM,aAAW,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}