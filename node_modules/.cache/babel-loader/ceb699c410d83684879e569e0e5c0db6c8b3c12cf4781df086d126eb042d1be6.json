{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, KeepAlive as _KeepAlive, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"v-main-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_select, {\n    options: $data.options,\n    onSelect: $options.optionSelect\n  }, null, 8 /* PROPS */, [\"options\", \"onSelect\"]), _createElementVNode(\"p\", null, \" sel: \" + _toDisplayString($data.selected), 1 /* TEXT */), _createCommentVNode(\" в этой области показываются компоненты в зависимости от адреса т.е либо карт или каталог  \"), _createCommentVNode(\" <keep-alive> сохранение состояния при изменении \"), (_openBlock(), _createBlock(_KeepAlive, null, [_createVNode(_component_router_view)], 1024 /* DYNAMIC_SLOTS */)), _createCommentVNode(\" <VCatalog/> \"), _createCommentVNode(\" если корзина пута то она не выводится \"), _createCommentVNode(\" :cart_data=\\\"CART\\\" связал родительский с дочерним  \"), _createCommentVNode(\" <VCart\\n      v-if=\\\"CART.length\\\"\\n      :cart_data=\\\"CART\\\"\\n    /> \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_select","options","$data","onSelect","$options","optionSelect","_createElementVNode","_toDisplayString","selected","_createCommentVNode","_createBlock","_KeepAlive","_component_router_view"],"sources":["/home/denis/Desktop/catalog/catalog-vue-js/src/components/v-main-wrapper.vue"],"sourcesContent":["<template>\n    <div class=\"v-main-wrapper\">\n<v-select\n:options=\"options\"\n@select=\"optionSelect\"  \n/>\n<p> sel:\n{{ selected }}\n</p>\n   <!-- в этой области показываются компоненты в зависимости от адреса т.е либо карт или каталог  -->\n   <!-- <keep-alive> сохранение состояния при изменении -->\n\n  <keep-alive>\n   <router-view></router-view>\n  </keep-alive>\n    <!-- <VCatalog/> -->\n    <!-- если корзина пута то она не выводится -->\n    <!-- :cart_data=\"CART\" связал родительский с дочерним  -->\n    <!-- <VCart\n      v-if=\"CART.length\"\n      :cart_data=\"CART\"\n    /> -->\n    </div>\n</template>\n<script>\n// import VCatalog from './v-catalog'\n// import VCart from './v-cart.vue';\nimport{mapGetters} from 'vuex';//чтобы поймать геттер корзины\nimport vSelect from './v-select.vue';\nexport default {\n    name:\"v-main-wrapper\",\n  components: { \n    vSelect\n    //VCatalog, \n    // VCart\n   },\n    data(){\n       return{\n        title :'CATALOG',\n        options :[\n          {name:'Options 1',value: 1},\n          {name:'Options 2',value: 2},\n          {name:'Options 3',value: 3},\n          {name:'Options 4',value: 4},\n          {name:'Options 5',value: 5}\n        ],\n        selected:''\n       } \n    }, \n     computed :{\n      ...mapGetters(['CART'])// сюда положили товар \n\n    },\n    methods:{\n      optionSelect(options){\n        this.selected=options.name\n\n      }\n    }\n}\n</script>\n<style> \n.v-main-wrapper{\n  max-width: 900px;\n  margin: 0 auto;\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;;;uBAA3BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBVC,YAAA,CAGEC,mBAAA;IAFDC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAChBE,QAAM,EAAEC,QAAA,CAAAC;oDAETC,mBAAA,CAEI,WAFD,QACH,GAAAC,gBAAA,CAAGL,KAAA,CAAAM,QAAQ,kBAERC,mBAAA,+FAAkG,EAClGA,mBAAA,qDAAwD,G,cAEzDC,YAAA,CAEaC,UAAA,SADZZ,YAAA,CAA2Ba,sBAAA,E,8BAE1BH,mBAAA,iBAAoB,EACpBA,mBAAA,2CAA8C,EAC9CA,mBAAA,yDAA0D,EAC1DA,mBAAA,2EAGM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}